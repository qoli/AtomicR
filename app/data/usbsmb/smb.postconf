#!/bin/sh
do_logs(){
    logger "$1"
	echo   "$1"
	return 0
}
do_check_usb(){
    local ii=0;local v2="";local v3="";local mn="";local tp="";local r=0
	local v1="$(cat $1 | grep -w 'path' | sed "s/path//g" | sed "s/=//g" | sed 's/ /\n/g' | sed '/^\s*$/d')"
	[ -z "$v1" ] && return 1
	local n1=$(echo "$v1" | awk 'END{print NR}')
	if [ "$n1" -ge 1 >/dev/null 2>&1 ];then
        ii=1
	else
	    return 1
	fi
	until [ "$ii" -gt "$n1" ];do 
		v3=$(dirname $(echo "$v1" | awk NR==$ii{print}))
        if [ -z "$(echo $v2 | grep -o $v3)" ];then
            v2="$v2$v3"
			mn=$(mount | grep -w "$(basename $v3)" | awk -F ' ' '{print $3}')
            tp=$(mount | grep -w "$(basename $v3)" | awk -F ' ' '{print $5}' | tr 'A-Z' 'a-z')
			do_logs "samba v$2 will use $mn"
			if [ "$tp" == "ext3" -o "$tp" == "ext4" ];then
			   r=0
			else 
				r=1 && break
			fi
		fi
	    ii=$(($ii+1))
	done
	if [ "$r" -eq 0 ];then
	    return 0
	else
	    do_logs "Please format $mn into EXT3 or EXT4, the $n effect will be better.[请将$mn格式化为EXT3或EXT4, 优化效果会更好]."
		return 1
	fi
}
do_optimized_usb(){
	local c="$1";local n="$2";[ -z "$c" ] && c="/etc/smb.conf";[ -z "$n" ] && n="optimize"
	local xmem_max="116736"
	local xmem_default="122880"
	local tcp_xmem="4096	87380	1794048"
	local mc="max connections";local mv="";local st_max_user=5
    local so="socket options";local sv=""
	local es=$(nvram get enable_samba)	
	local sp=$(nvram get smbd_protocol)
	local NMBD=`which nmbd`;local SMBD=`which smbd`;local v=0
	local SYSINFO=`which sysinfo`;local DMESG=`which dmesg`;local usb_type=""
	local r1=0;local r2=1;local m
	#============================================#
	#IPTOS_LOWDELAY:为交互式通信最小化延迟时间
	#TCP_NODELAY:禁止nagle算法
	#SO_KEEPALIVE:心跳检测
	#SO_RCVBUF:接收缓冲区
	#SO_SNDBUF:发送缓冲区
	#IPTOS_THROUGHPUT:优化吞吐量
	#============================================#
	case "$n" in
	    default)
		    #恢复
			st_max_user=5
		    mv="${mc} = ${st_max_user}"
            sv="${so} = IPTOS_LOWDELAY TCP_NODELAY SO_KEEPALIVE SO_RCVBUF=65536 SO_SNDBUF=65536"
			xmem_default="122880"
			xmem_max="116736"
			tcp_xmem="4096	 87380   1794048"
			m="恢复"
		    ;;
		optimize)
		    #优化
			st_max_user=2
		    mv="${mc} = ${st_max_user}"
            sv="${so} = IPTOS_LOWDELAY TCP_NODELAY SO_KEEPALIVE IPTOS_THROUGHPUT SO_RCVBUF=131072 SO_SNDBUF=131072" 
			xmem_default="256960"
			xmem_max="524288"
			tcp_xmem="8760   256960  8388608"
			m="优化"
		    ;;
	    *)
    esac
	[ -z "$sv" ] && return 1
	[ "$es" -eq 0 ] && return 1
	[ "$sp" -eq 0 ] && do_logs "Your Router Enable SMB2 protocol is too low, preferably set to SMBv1+SMBv2 or SMBv2." && do_logs "你的路由器Enable SMB2 protocol设置得太低,最好设置为SMBv1+SMBv2或SMBv2"	
    [ ! -f "$c" ] && do_logs "Can't Find $c[找不到$c]" && return 1
	if [ -x "$NMBD" -a -x "$SMBD" ];then
	    v=$($SMBD -V | awk '{print $2}')
		[ "$n" == "optimize" ] && [ -n "$v" ] && ! do_check_usb "$c" "$v" && return 1
		[ "$n" == "optimize" ] && [ -n "$v" ] && [ $(echo $v |awk -F '.' '{print $1}') -ge 4 ] && do_logs "samba version is v$v, stop $n[samba版本是v$v, 停止$m]" && return 1
	else
	    do_logs "Can't Find smbd and nmbd[找不到smbd和nmbd]" && return 1
	fi
	if [ $(nvram get usb_usb3) -ne 1 ];then
	    if [ -n "$SYSINFO" ];then
		    usb_type=$($SYSINFO | grep -v grep | grep -w 'usb' | grep -w 'device' | grep -o 'high')
		elif [ -n "$DMESG" ];then
		    usb_type=$($DMESG   | grep -v grep | grep -w 'usb' | grep -w 'device' | grep -o 'high')
		fi
		[ -n "$usb_type" ] && nvram set usb_usb3=1 && nvram commit
	fi
	if [ $(nvram get st_max_user) -ne "$st_max_user" ];then
		sed -i "s/${mc}.*/${mv}/g" "$c"
		r1=$? && [ "$r1" -eq 0 ] && nvram set st_max_user="$st_max_user" && nvram commit
	fi
	sed -i "s/${so}.*/${sv}/g" "$c";r2=$?
    if [ "$r1" -eq 0 -a "$r2" -eq 0 ];then
		if [ $(cat /proc/sys/net/core/rmem_max) -ne "$xmem_max" ];then
			echo "$xmem_default" > /proc/sys/net/core/rmem_default  
			echo "$xmem_default" > /proc/sys/net/core/wmem_default  
			echo "$xmem_max" > /proc/sys/net/core/rmem_max 
            echo "$xmem_max" > /proc/sys/net/core/wmem_max 
            echo "$tcp_xmem" > /proc/sys/net/ipv4/tcp_rmem 
            echo "$tcp_xmem" > /proc/sys/net/ipv4/tcp_wmem 
		fi
		do_logs "samba v$v has been successfully $n[已成功${m}samba v$v]" && return 0
    fi
	do_logs "Failure to $n samba v$v[${m}samba失败v$v]" && return 1
}
#==================run======================#
SN=$0
BN=$(basename $0) 
FD=86
FL="/var/lock/$BN.lock"
eval "exec $FD>\"$FL\""
trap "flock -u $FD" EXIT 
flock -xn $FD || exit 1
do_optimized_usb "$1" "optimize"
eval "$FD>\"$FL\""
#==================end======================#

